{"version":3,"file":"index.js","sources":["../../../lib/js/shell/shell.js","../../../lib/js/index.js"],"sourcesContent":["import angular from 'angular';\n\nangular.module('npm-ui.shell', [])\n  .controller('ShellController', /*@ngInject*/ function HomeController($rootScope, $scope, $window) {\n\n    const openBrowserLink = url => {\n\n      $window.shell.openExternal(url);\n    }\n    , updatePackage = () => {\n\n      $rootScope.$emit('user:update-package');\n    }\n    , installVersionPackage = () => {\n\n      $rootScope.$emit('user:install-version-package');\n    }\n    , selectGlobal = () => {\n\n      $rootScope.globally = true;\n      this.selectedProject = undefined;\n      this.showMenuButtons = undefined;\n      $rootScope.$emit('user:selected-global');\n    }\n    , selectProject = (project, event) => {\n\n      if (event) {\n\n        event.preventDefault();\n      }\n\n      $rootScope.globally = undefined;\n      this.selectedProject = project;\n      $rootScope.$emit('user:selected-project', project);\n      this.showMenuButtons = undefined;\n      if (event) {\n\n        event.stopPropagation();\n      }\n    }\n    , deleteProject = (project, event) => {\n\n      if (event) {\n\n        event.preventDefault();\n      }\n      const index = $rootScope.projectsList.indexOf(project);\n\n      this.showMenuButtons = undefined;\n      $rootScope.projectsList.splice(index, 1);\n      $rootScope.$emit('user:deleted-project', project);\n      if (event) {\n\n        event.stopPropagation();\n      }\n    }\n    , chooseProjectDir = () => {\n\n      const dir = $window.dialog.showOpenDialog({\n          'properties': [\n            'openDirectory'\n          ]\n        });\n      let duplicated = false\n       , splitForName;\n\n      if (dir && dir[0]) {\n        //check if not a duplicate\n        if ($rootScope.projectsList &&\n          $rootScope.projectsList.length > 0) {\n\n          $rootScope.projectsList.forEach(element => {\n\n            if (element.path[0] === dir[0]) {\n\n              duplicated = true;\n            }\n          });\n        }\n\n        if (duplicated) {\n\n          return $window.dialog.showErrorBox('Error', 'You already added this folder project');\n        }\n\n        if (!duplicated && dir[0].split(/\\//g).pop()) {\n\n          splitForName = dir[0].split(/\\//g).pop();\n          $rootScope.$emit('user:added-new-project', {\n            'name': splitForName,\n            'path': dir\n          });\n        } else {\n\n          $window.dialog.showErrorBox('Error', 'Please select a project folder');\n        }\n      }\n    }\n    , unregisterOnTotalInstalledPkg = $rootScope.$on('project:total-installed-packages', (eventInfo, data) => {\n\n      if ($rootScope.globally) {\n\n        $rootScope.globalInstalledCount = data;\n      }\n    })\n    , unregisterOnSelectedPackage = $rootScope.$on('user:selected-package', () => {\n\n      this.showMenuButtons = true;\n    })\n    , unregisterOnNewProject = $rootScope.$on('user:added-new-project', (eventInfo, data) => {\n\n      this.showMenuButtons = undefined;\n      $scope.$evalAsync(() => {\n\n        $rootScope.projectsList.unshift(data);\n        selectProject(data);\n      });\n    });\n\n    $scope.$on('$destroy', () => {\n\n      unregisterOnNewProject();\n      unregisterOnSelectedPackage();\n      unregisterOnTotalInstalledPkg();\n    });\n\n    this.chooseProjectDir = chooseProjectDir;\n    this.selectGlobal = selectGlobal;\n    this.selectProject = selectProject;\n    this.deleteProject = deleteProject;\n    this.updatePackage = updatePackage;\n    this.installVersionPackage = installVersionPackage;\n    this.openBrowserLink = openBrowserLink;\n    $rootScope.globally = true;\n  });\n\nexport default 'npm-ui.shell';\n","import angular from 'angular';\nimport electron from 'electron';\nimport remote from 'remote';\nimport npmUi from './shell/shell.js';\n\nangular.module('electron', [\n  '720kb.fx',\n  'LocalStorageModule',\n  npmUi\n])\n\n.config(/*@ngInject*/ localStorageServiceProvider => {\n\n  localStorageServiceProvider.setPrefix('electron');\n})\n.run(/*@ngInject*/ ($window, sessionFactory) => {\n\n  $window.remote = remote;\n  //open links in browser and items in folder\n  $window.shell = electron.shell;\n\n  $window.dialog = $window.remote.require('dialog');\n  sessionFactory.initialize(); ///FIXME!\n});\n"],"names":[],"mappings":"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"}